{"componentChunkName":"component---src-templates-docs-js","path":"/java/spring/handlerMethodArgumentResolver","result":{"data":{"site":{"siteMetadata":{"title":"Malgogi blog","docsLocation":"https://github.com/malgogi/malgogi-blog/tree/master/content"}},"mdx":{"fields":{"id":"be3e2e0e-6522-5797-82ac-a91be4a50c22","title":"HandlerMethodArgumentResolver","slug":"/java/spring/handlerMethodArgumentResolver"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"HandlerMethodArgumentResolver\",\n  \"metaTitle\": \"HandlerMethodArgumentResolver\",\n  \"metaDescription\": \"HandlerMethodArgumentResolver\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Description\"), mdx(\"h2\", null, \"Step\"), mdx(\"h3\", null, \"1. Create annotation\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"@Target(ElementType.PARAMETER)\\n@Retention(RetentionPolicy.RUNTIME)\\npublic @interface Checked {\\n}\\n\")), mdx(\"h3\", null, \"2. Create domain\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"@Data\\n@Builder\\n@AllArgsConstructor\\n@NoArgsConstructor\\npublic class User {\\n    private String userName;\\n}\\n\")), mdx(\"h3\", null, \"3. Create HandlerMethodArgumentResolver\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"@Component\\n@Slf4j\\npublic class CheckedUserArgumentResolver implements HandlerMethodArgumentResolver {\\n\\n    @Override\\n    public boolean supportsParameter(MethodParameter parameter) {\\n        return parameter.hasParameterAnnotation(Checked.class)\\n                && parameter.getParameterType().equals(User.class);\\n    }\\n\\n    @Override\\n    public Object resolveArgument(MethodParameter parameter, ModelAndViewContainer mavContainer, NativeWebRequest webRequest, WebDataBinderFactory binderFactory) throws Exception {\\n        String userName = webRequest.getHeader(\\\"X-Ma-UserName\\\");\\n        return User.builder().userName(userName).build();\\n    }\\n}\\n\")), mdx(\"h3\", null, \"4. Register resolver\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"@Configuration\\npublic class MalgogiConfiguration implements WebMvcConfigurer {\\n    @Autowired\\n    private CheckedUserArgumentResolver checkedUserArgumentResolver;\\n\\n    ...\\n\\n    @Override\\n    public void addArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {\\n        argumentResolvers.add(checkedUserArgumentResolver);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"5. Implement Controller\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"@RestController\\n@RequestMapping(\\\"/v1/user\\\")\\n@Slf4j\\npublic class UserController {\\n\\n    @GetMapping\\n    public Callable<User> getUser(@Checked User user) {\\n        return () -> user;\\n    }\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#description","title":"Description"},{"url":"#step","title":"Step","items":[{"url":"#1-create-annotation","title":"1. Create annotation"},{"url":"#2-create-domain","title":"2. Create domain"},{"url":"#3-create-handlermethodargumentresolver","title":"3. Create HandlerMethodArgumentResolver"},{"url":"#4-register-resolver","title":"4. Register resolver"},{"url":"#5-implement-controller","title":"5. Implement Controller"}]}]},"parent":{"relativePath":"java/spring/handlerMethodArgumentResolver.md"},"frontmatter":{"metaTitle":"HandlerMethodArgumentResolver","metaDescription":"HandlerMethodArgumentResolver"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/javascript/ecma2020","title":"ECAMA 2020 Changes"}}},{"node":{"fields":{"slug":"/utils/intellij","title":"Intellij shortcut"}}},{"node":{"fields":{"slug":"/java/rxJava","title":"RxJava"}}},{"node":{"fields":{"slug":"/java/spring","title":"Spring"}}},{"node":{"fields":{"slug":"/java/spring/servlet","title":"Servlet"}}},{"node":{"fields":{"slug":"/java/spring/basic","title":"Basic"}}},{"node":{"fields":{"slug":"/","title":"Landing Page"}}},{"node":{"fields":{"slug":"/javascript","title":"Javascript"}}},{"node":{"fields":{"slug":"/java","title":"java"}}},{"node":{"fields":{"slug":"/utils","title":"utils"}}},{"node":{"fields":{"slug":"/java/rxJava/basic","title":"Basic"}}},{"node":{"fields":{"slug":"/java/spring/handlerMethodArgumentResolver","title":"HandlerMethodArgumentResolver"}}},{"node":{"fields":{"slug":"/redis","title":"redis"}}},{"node":{"fields":{"slug":"/redis/setup","title":"setup"}}},{"node":{"fields":{"slug":"/redis/key-event-notification","title":"Redis Key Event Notification"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"be3e2e0e-6522-5797-82ac-a91be4a50c22"}}}